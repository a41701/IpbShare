// <auto-generated />
using System;
using IpbShare.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IpbShare.Infrastructure.Migrations
{
    [DbContext(typeof(IpbShareDbContext))]
    [Migration("20211221152149_ipbshare")]
    partial class ipbshare
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21");

            modelBuilder.Entity("IpbShare.Domain.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NomeCategoria")
                        .IsUnique();

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("IpbShare.Domain.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EscolaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeCurso")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<int>("NumAlunos")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.HasIndex("NomeCurso")
                        .IsUnique();

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EscolaId = 1,
                            NomeCurso = "EI",
                            NumAlunos = 0
                        });
                });

            modelBuilder.Entity("IpbShare.Domain.Models.Equipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescricaoEquipamento")
                        .HasColumnType("TEXT");

                    b.Property<int>("EscolaId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReservado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeEquipamento")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<byte[]>("Thumb")
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EscolaId");

                    b.HasIndex("NomeEquipamento")
                        .IsUnique();

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("IpbShare.Domain.Models.Escola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeEscola")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NomeEscola")
                        .IsUnique();

                    b.ToTable("Escolas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NomeEscola = "ESTIG"
                        });
                });

            modelBuilder.Entity("IpbShare.Domain.Models.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomePais")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NomePais")
                        .IsUnique();

                    b.ToTable("Paises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NomePais = "Portugal"
                        });
                });

            modelBuilder.Entity("IpbShare.Domain.Models.Reserva", b =>
                {
                    b.Property<int>("EquipamentoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("EquipamentoId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("IpbShare.Domain.Models.Utilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdministrator")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<int>("PaisId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PaisId");

                    b.ToTable("Utilizadores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CursoId = 1,
                            Email = "admin@ipb.pt",
                            IsAdministrator = true,
                            Nome = "admin",
                            PaisId = 1,
                            Password = "D033E22AE348AEB5660FC2140AEC35850C4DA997"
                        });
                });

            modelBuilder.Entity("IpbShare.Domain.Models.Curso", b =>
                {
                    b.HasOne("IpbShare.Domain.Models.Escola", "Escola")
                        .WithMany("CursoList")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("IpbShare.Domain.Models.Equipamento", b =>
                {
                    b.HasOne("IpbShare.Domain.Models.Categoria", "Categoria")
                        .WithMany("Equipamentos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IpbShare.Domain.Models.Escola", "Escola")
                        .WithMany("Equipamentos")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("IpbShare.Domain.Models.Reserva", b =>
                {
                    b.HasOne("IpbShare.Domain.Models.Equipamento", "Equipamento")
                        .WithMany("Reservados")
                        .HasForeignKey("EquipamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IpbShare.Domain.Models.Utilizador", "Utilizador")
                        .WithMany("ReservaList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("IpbShare.Domain.Models.Utilizador", b =>
                {
                    b.HasOne("IpbShare.Domain.Models.Curso", "Curso")
                        .WithMany("UtilizadorList")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IpbShare.Domain.Models.Pais", "Pais")
                        .WithMany("UtilizadorList")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
